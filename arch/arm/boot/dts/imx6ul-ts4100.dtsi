// SPDX-License-Identifier: GPL-2.0 OR X11
/*
 * Copyright (C) 2023 Technologic Systems, Inc. dba embeddedTS
 */

#include <dt-bindings/input/input.h>
#include <dt-bindings/leds/common.h>
#include "imx6ul.dtsi"

/ {
	aliases {
		ethernet0 = &fec2;
		ethernet1 = &fec1;
		gpio5 = &gpio6; /* Map FPGA gpio expander to gpiochip5 */
	};

	chosen {
		stdout-path = &uart1;
	};

	led-controller {
		compatible = "gpio-leds";

		led-0 {
			color = <LED_COLOR_ID_GREEN>;
			function = LED_FUNCTION_POWER;
			gpios = <&gpio6 27 GPIO_ACTIVE_LOW>;
			default-state = "on";
		};

		led-1 {
			color = <LED_COLOR_ID_RED>;
			function = LED_FUNCTION_INDICATOR;
			gpios = <&gpio6 28 GPIO_ACTIVE_LOW>;
			default-state = "off";
		};
	};

	memory {
		/* Memory size to be filled in by U-Boot */
		reg = <0x80000000 0>;
	};

	reg_sd1_vmmc: regulator-sd1-vmmc {
		compatible = "regulator-fixed";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_sd1_vmmc>;
		regulator-name = "SD1_VMMC";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		enable-gpio = <&gpio5 9 GPIO_ACTIVE_HIGH>;
		enable-active-high;
	};

	reg_usb_otg1_vbus: regulator-otg1-vbus {
		compatible = "regulator-fixed";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_usb_otg1>;
		regulator-name = "USB_OTG1_VBUS";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		gpio = <&gpio1 4 GPIO_ACTIVE_HIGH>;
		enable-active-high;
	};

	vref_vdd_adc_3v3: regulator-adc-vref {
	      compatible = "regulator-fixed";
	      regulator-name = "ADC_VREF";
	      regulator-min-microvolt = <3300000>;
	      regulator-max-microvolt = <3300000>;
	      regulator-boot-on;
	      regulator-always-on;
	};
};

&adc1  {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_adc1>;
	vref-supply = <&vref_vdd_adc_3v3>;
	status = "okay";
};

&can1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_flexcan1>;
	status = "okay";
};

&can2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_flexcan2>;
	status = "okay";
};

&ecspi3 {
	num-cs = <1>;
	cs-gpios = <&gpio4 12 GPIO_ACTIVE_LOW>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi3>;
	status = "okay";

	spidevfpga: spi@0 {
		compatible = "technologic,spi-header";
		reg = <0>;
		spi-max-frequency = <1000000>;
	};
};

&ecspi4 {
	num-cs = <1>;
	cs-gpios = <&gpio4 9 GPIO_ACTIVE_LOW>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi4>;
	status = "okay";

	wilc: wifi@0 {
		compatible = "microchip,wilc3000";
		reg = <0>;
		/* XXX: Lower this */
		spi-max-frequency = <18000000>;
		reset-gpios = <&gpio4 16 GPIO_ACTIVE_HIGH>;
		chip_en-gpios = <&gpio1 19 GPIO_ACTIVE_HIGH>;
		interrupt-parent = <&gpio5>;
		interrupts = <8 IRQ_TYPE_EDGE_FALLING>;
	};
};

&fec1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_enet1>;
	phy-mode = "rmii";
	phy-handle = <&ethphy0>;
	status = "okay";
};

&fec2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_enet2>;
	phy-mode = "rmii";
	phy-handle = <&ethphy1>;
	status = "okay";

	mdio {
		#address-cells = <1>;
		#size-cells = <0>;

		ethphy0: ethernet-phy@2 {
			clocks = <&clks IMX6UL_CLK_ENET_REF>;
			clock-names = "rmii-ref";
			compatible = "ethernet-phy-ieee802.3-c22";
			reg = <2>;
		};

		ethphy1: ethernet-phy@1 {
			clocks = <&clks IMX6UL_CLK_ENET2_REF>;
			clock-names = "rmii-ref";
			compatible = "ethernet-phy-ieee802.3-c22";
			reg = <1>;
		};
	};
};

&gpio1 {
	gpio-line-names = "USB_OTG_ID", "GPIO_1_ADC", "I2C_1_CLK", "I2C_1_DAT",
		"EN_OTG1_5V", "", "", "", "GPIO_8_PWM", "GPIO_9_ADC", "", "",
		"", "", "", "", "", "", "SPARE_1", "SPARE_2";
};

&gpio3 {
	gpio-line-names = "LCD_PIX_CLK", "EN_LCD_3.3V", "LCD_HSYNC", "LCD_VSYNC",
		"", "I2C_3_DAT", "I2C_3_CLK", "LCD_D02", "LCD_D03", "LCD_D04",
		"LCD_D05", "LCD_D06", "LCD_D07", "", "", "LCD_D10", "LCD_D11",
		"LCD_D12", "LCD_D13", "LCD_D14", "LCD_D15", "", "", "LCD_D18_PWM5",
		"LCD_D19_PWM6", "LCD_D20", "LCD_D21", "LCD_D22", "LCD_D23";
};

&gpio4 {
	gpio-line-names = "", "", "", "", "", "", "", "", "", "", "", "FPGA_RESET#",
		"", "", "", "", "", "CAM_MCLK", "CAM_PIX_CLK", "CAM_VSYNC",
		"CAM_HSYNC", "CAM_D_0", "CAM_D_1", "CAM_D_2", "CAM_D_3", "CAM_D_4",
		"CAM_D_5", "CAM_D_6", "CAM_D_7";
};

&gpio5 {
	gpio-line-names = "POWER_FAIL", "FPGA_IRQ", "EN_EMMC_PWR", "",
		"JTAG_FPGA_TDO", "JTAG_FPGA_TDI", "JTAG_FPGA_TMS", "JTAG_JTAG_TCK";

	vdd-soc-in-v-hog {
		gpio-hog;
		gpios = <3 GPIO_ACTIVE_HIGH>;
		output-high;
		line-name = "VDD_SOC_IN_V";
	};
};

/* These must be GPIO mode for uC WDT */
&i2c1 {
	compatible = "i2c-gpio";
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c1_gpio>;
	sda-gpios = <&gpio1 3 (GPIO_ACTIVE_HIGH|GPIO_OPEN_DRAIN)>;
	scl-gpios = <&gpio1 2 (GPIO_ACTIVE_HIGH|GPIO_OPEN_DRAIN)>;
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";

	silabs: wdt@4a {
		compatible = "technologic,ts-wdt";
		timeout-sec = <500>;
		enable-early;
		reg = <0x4a>;
		/*
		 * Not using uC WDT by default any longer. If you need features
		 * provided by this, such as a real poweroff state, an external
		 * WDT, or proper feedback from the uC on the platform's reboot
		 * source (via tsmicroctl), then enable this driver (and disable
		 * the CPU driver, wdog1,  unless you want both active).
		 */
		status = "disabled";
	};
};

&i2c3 {
	clock-frequency = <400000>;
	pinctrl-names = "default", "gpio";
	pinctrl-0 = <&pinctrl_i2c3>;
	pinctrl-1 = <&pinctrl_i2c3_gpio>;
	status = "okay";
	sda-gpios = <&gpio3 5 (GPIO_ACTIVE_HIGH|GPIO_OPEN_DRAIN)>;
	scl-gpios = <&gpio3 6 (GPIO_ACTIVE_HIGH|GPIO_OPEN_DRAIN)>;

	/* FPGA emulates register access like an eeprom */
	fpgareg: eeprom@29 {
		compatible = "atmel,24c512";
		reg = <0x29>;
	};

	/* This may need to be reworked here */
	gpio6: gpio-controller@28 {
		compatible = "technologic,ts4900-gpio";
		reg = <0x28>;
		#gpio-cells = <2>;
		gpio-controller;
		base = <160>;
		ngpios = <128>;

		gpio-line-names = "", "SPARE_1", "SPARE_2", "WIFI_RESET#", "WIFI_IRQ",
			"UART2_TXD", "UART2_CTS#", "UART3_TXD", "UART6_TXD",
			"UART2_RXD", "UART2_RTS#", "UART3_RXD", "UART6_RXD",
			"WIFI_RXD", "WIFI_RTS", "WIFI_IRQ#", "WIFI_TXD",
			"WIFI_CTS", "ZPU_BREAK", "ZPU_RESET", "EN_WIFI_PWR",
			"WIFI_RESET#", "EN_USB_HOST_5V", "EN_LCD_3V3",
			"ETH_PHY_RESET#", "OFF_BD_RESET#", "", "GREEN_LED#",
			"RED_LED#", "UARTA_RXD", "UARTB_RXD", "UARTC_RXD",
			"UARTD_RXD", "UARTA_TXD", "UARTB_TXD", "UARTC_TXD",
			"UARTD_TXD", "DIO_0", "DIO_1", "DIO_2", "DIO_3", "DIO_4",
			"DIO_5", "DIO_6", "DIO_7", "DIO_8", "DIO_9", "", "",
			"DIO_12", "DIO_13", "DIO_14", "DIO_15", "DIO_16", "DIO_17",
			"DIO_18", "DIO_19", "DIO_20", "DIO_21", "DIO_22",
			"DIO_23", "DIO_24", "DIO_25", "DIO_26", "DIO_27",
			"DIO_28", "DIO_29", "DIO_30", "DIO_31", "DIO_32",
			"DIO_33", "DIO_34", "DIO_35", "DIO_36", "DIO_37",
			"DIO_38", "DIO_39", "", "DIO_41", "DIO_42", "DIO_43",
			"DIO_44", "DIO_45", "DIO_46";
	};
};

&iomuxc {
	pinctrl-names = "default";
	pinctrl-0 = <&ts4100_pinctrl_hog>;
	imx6ul-ts4100 {
		/* NOTE: All of the hogged pins below are the common rule.
		 * Exceptions for them are listed in their respective baseboard
		 * DTS.
		 *
		 * Most IO pins default to GPIO, however they are set up with
		 * keepers rather than a sane pull.  Because of that, we have to
		 * list them all here so they are set up in a known state.
		 * It is then up to individual DTS files to call out the pinctrl
		 * needed for pins that could have different states.
		 */
		/* All GPIO should be 0x1b020 unless special
		 * 0x1b020 == Hyst., 100k PU, 50 mA drive
		 * 0x1a020 == no pull resistor
		 * 0x13020 == 100k PD
		 */
		ts4100_pinctrl_hog: hoggrp {
			fsl,pins = <
				/* SD1 VSELECT, special setting */
				MX6UL_PAD_GPIO1_IO05__USDHC1_VSELECT	0x17059
				/* POWER_FAIL */
				MX6UL_PAD_SNVS_TAMPER0__GPIO5_IO00	0x13020
				/* FPGA_IRQ */
				MX6UL_PAD_SNVS_TAMPER1__GPIO5_IO01	0x13020
				/* FPGA_RESET# */
				MX6UL_PAD_NAND_WP_B__GPIO4_IO11		0x1b020
				/* JTAG_FPGA_TDO */
				MX6UL_PAD_SNVS_TAMPER4__GPIO5_IO04	0x1b020
				/* JTAG_FPGA_TDI */
				MX6UL_PAD_SNVS_TAMPER5__GPIO5_IO05	0x1b020
				/* JTAG_FPGA_TMS */
				MX6UL_PAD_SNVS_TAMPER6__GPIO5_IO06	0x1b020
				/* JTAG_FPGA_TCK */
				MX6UL_PAD_SNVS_TAMPER7__GPIO5_IO07	0x1b020
				/* SPARE_1 */
				MX6UL_PAD_UART1_CTS_B__GPIO1_IO18	0x1b020
				/* SPARE_2 */
				MX6UL_PAD_UART1_RTS_B__GPIO1_IO19	0x1b020
				/* eMMC En. */
				MX6UL_PAD_SNVS_TAMPER2__GPIO5_IO02	0x1b020
				/* VDD_SOC_IN_V control */
				MX6UL_PAD_SNVS_TAMPER3__GPIO5_IO03	0x79
			>;
		};

		pinctrl_adc1: adc1grp{
			fsl,pins = <
				MX6UL_PAD_GPIO1_IO01__GPIO1_IO01	0x1a020
				MX6UL_PAD_GPIO1_IO09__GPIO1_IO09	0x1a020
			>;
		};

		pinctrl_cam_gpio: cameragpio {
			fsl,pins = <
				/* Camera interface pins */
				MX6UL_PAD_CSI_DATA00__GPIO4_IO21	0x1b020
				MX6UL_PAD_CSI_DATA01__GPIO4_IO22	0x1b020
				MX6UL_PAD_CSI_DATA02__GPIO4_IO23	0x1b020
				MX6UL_PAD_CSI_DATA03__GPIO4_IO24	0x1b020
				MX6UL_PAD_CSI_DATA04__GPIO4_IO25	0x1b020
				MX6UL_PAD_CSI_DATA05__GPIO4_IO26	0x1b020
				MX6UL_PAD_CSI_DATA06__GPIO4_IO27	0x1b020
				MX6UL_PAD_CSI_DATA07__GPIO4_IO28	0x1b020
				MX6UL_PAD_CSI_HSYNC__GPIO4_IO20		0x1b020
				MX6UL_PAD_CSI_MCLK__GPIO4_IO17		0x1b020
				MX6UL_PAD_CSI_PIXCLK__GPIO4_IO18	0x1b020
				MX6UL_PAD_CSI_VSYNC__GPIO4_IO19		0x1b020
			>;
		};

		pinctrl_ecspi3: ecspi3grp {
			fsl,pins = <
				/* SPI_3_FPGA_CS# */
				MX6UL_PAD_NAND_READY_B__GPIO4_IO12 	0x10b0
				MX6UL_PAD_NAND_CE0_B__ECSPI3_SCLK	0x10b0
				MX6UL_PAD_NAND_CE1_B__ECSPI3_MOSI	0x10b0
				MX6UL_PAD_NAND_CLE__ECSPI3_MISO		0x10b0
				/* SPI_3_OFF_BD_CS# */
				MX6UL_PAD_NAND_ALE__GPIO4_IO10		0x10b0
			>;
		};

		pinctrl_ecspi4: ecspi4grp {
			fsl,pins = <
				MX6UL_PAD_NAND_DATA04__ECSPI4_SCLK	0x10b0
				MX6UL_PAD_NAND_DATA05__ECSPI4_MOSI	0x10b0
				MX6UL_PAD_NAND_DATA06__ECSPI4_MISO	0x10b0
				/* WIFI chip select */
				MX6UL_PAD_NAND_DATA07__GPIO4_IO09	0x10b0
				/* SPARE_4/WIFI_IRQ */
				MX6UL_PAD_SNVS_TAMPER8__GPIO5_IO08	0x1b020
				/* SPARE_3/WIFI_RESET# */
				MX6UL_PAD_NAND_DQS__GPIO4_IO16		0x1b020
			>;
		};

		pinctrl_enet1: enet1grp {
			fsl,pins = <
				MX6UL_PAD_ENET1_RX_EN__ENET1_RX_EN	0x1b0b0
				MX6UL_PAD_ENET1_RX_ER__ENET1_RX_ER	0x1b0b0
				MX6UL_PAD_ENET1_RX_DATA0__ENET1_RDATA00	0x1b0b0
				MX6UL_PAD_ENET1_RX_DATA1__ENET1_RDATA01	0x1b0b0
				MX6UL_PAD_ENET1_TX_EN__ENET1_TX_EN	0x1b0b0
				MX6UL_PAD_ENET1_TX_DATA0__ENET1_TDATA00	0x1b0b0
				MX6UL_PAD_ENET1_TX_DATA1__ENET1_TDATA01	0x1b0b0
				MX6UL_PAD_ENET1_TX_CLK__ENET1_REF_CLK1	0x4001b031
			>;
		};

		pinctrl_enet2: enet2grp {
			fsl,pins = <
				MX6UL_PAD_GPIO1_IO07__ENET2_MDC		0x1b0b0
				MX6UL_PAD_GPIO1_IO06__ENET2_MDIO	0x1b0b0
				MX6UL_PAD_JTAG_MOD__GPIO1_IO10		0x1f0b0
				MX6UL_PAD_ENET2_RX_EN__ENET2_RX_EN	0x1b0b0
				MX6UL_PAD_ENET2_RX_ER__ENET2_RX_ER	0x1b0b0
				MX6UL_PAD_ENET2_RX_DATA0__ENET2_RDATA00	0x1b0b0
				MX6UL_PAD_ENET2_RX_DATA1__ENET2_RDATA01	0x1b0b0
				MX6UL_PAD_ENET2_TX_EN__ENET2_TX_EN	0x1b0b0
				MX6UL_PAD_ENET2_TX_DATA0__ENET2_TDATA00	0x1b0b0
				MX6UL_PAD_ENET2_TX_DATA1__ENET2_TDATA01	0x1b0b0
				MX6UL_PAD_ENET2_TX_CLK__ENET2_REF_CLK2	0x4001b031
			>;
		};

		pinctrl_flexcan1: flexcan1grp{
			fsl,pins = <
				MX6UL_PAD_LCD_DATA08__FLEXCAN1_TX	0x1b020
				MX6UL_PAD_LCD_DATA09__FLEXCAN1_RX	0x1b020
			>;
		};

		pinctrl_flexcan2: flexcan2grp{
			fsl,pins = <
				MX6UL_PAD_UART2_RTS_B__FLEXCAN2_RX	0x1b020
				MX6UL_PAD_UART2_CTS_B__FLEXCAN2_TX	0x1b020
			>;
		};

		pinctrl_i2c1_gpio: i2c1grpgpio {
			fsl,pins = <
				MX6UL_PAD_GPIO1_IO02__GPIO1_IO02	0x4001b8b0
				MX6UL_PAD_GPIO1_IO03__GPIO1_IO03	0x4001b8b0
			>;
		};

		pinctrl_i2c3: i2c3grp {
			fsl,pins = <
				MX6UL_PAD_LCD_DATA01__I2C3_SCL		0x4001b8b0
				MX6UL_PAD_LCD_DATA00__I2C3_SDA		0x4001b8b0
			>;
		};

		pinctrl_i2c3_gpio: i2c3grpgpio {
			fsl,pins = <
				MX6UL_PAD_LCD_DATA01__GPIO3_IO06	0x4001b8b0
				MX6UL_PAD_LCD_DATA00__GPIO3_IO05	0x4001b8b0
			>;
		};

		pinctrl_lcd_gpio: lcdgpio {
			fsl,pins = <
				/* LCD Interface pins */
				MX6UL_PAD_LCD_DATA02__GPIO3_IO07	0x1b020
				MX6UL_PAD_LCD_DATA03__GPIO3_IO08	0x1b020
				MX6UL_PAD_LCD_DATA04__GPIO3_IO09	0x1b020
				MX6UL_PAD_LCD_DATA05__GPIO3_IO10	0x1b020
				MX6UL_PAD_LCD_DATA06__GPIO3_IO11	0x1b020
				MX6UL_PAD_LCD_DATA07__GPIO3_IO12	0x1b020
				MX6UL_PAD_LCD_DATA10__GPIO3_IO15	0x1b020
				MX6UL_PAD_LCD_DATA11__GPIO3_IO16	0x1b020
				MX6UL_PAD_LCD_DATA12__GPIO3_IO17	0x1b020
				MX6UL_PAD_LCD_DATA13__GPIO3_IO18	0x1b020
				MX6UL_PAD_LCD_DATA14__GPIO3_IO19	0x1b020
				MX6UL_PAD_LCD_DATA15__GPIO3_IO20	0x1b020
				MX6UL_PAD_LCD_DATA20__GPIO3_IO25	0x1b020
				MX6UL_PAD_LCD_DATA21__GPIO3_IO26	0x1b020
				MX6UL_PAD_LCD_DATA22__GPIO3_IO27	0x1b020
				MX6UL_PAD_LCD_DATA23__GPIO3_IO28	0x1b020
				MX6UL_PAD_LCD_CLK__GPIO3_IO00		0x1b020
				MX6UL_PAD_LCD_ENABLE__GPIO3_IO01	0x1b020
				MX6UL_PAD_LCD_HSYNC__GPIO3_IO02		0x1b020
				MX6UL_PAD_LCD_VSYNC__GPIO3_IO03		0x1b020
			>;
		};

		pinctrl_pwm1: ts4100pwm1 {
			fsl,pins = <
				MX6UL_PAD_GPIO1_IO08__PWM1_OUT		0x13020
			>;
		};

		/*  adc1 is currently using IO09,to use pwm2 remove IO09 from the ADC
		 *  definition and set pwm2 peripheral to "okay"
		 */
		pinctrl_pwm2: ts4100pwm2 {
			fsl,pins = <
				MX6UL_PAD_GPIO1_IO09__PWM2_OUT		0x13020
			>;
		};

		pinctrl_pwm5: ts4100pwm5 {
			fsl,pins = <
				MX6UL_PAD_LCD_DATA18__PWM5_OUT		0x13020
			>;
		};

		pinctrl_pwm6: ts4100pwm6 {
			fsl,pins = <
				MX6UL_PAD_LCD_DATA19__PWM6_OUT		0x13020
			>;
		};

		pinctrl_sai2: sai2grp {
			fsl,pins = <
				MX6UL_PAD_JTAG_TDI__SAI2_TX_BCLK	0x17088
				MX6UL_PAD_JTAG_TDO__SAI2_TX_SYNC	0x17088
				MX6UL_PAD_JTAG_TRST_B__SAI2_TX_DATA	0x11088
				MX6UL_PAD_JTAG_TCK__SAI2_RX_DATA	0x11088
				MX6UL_PAD_JTAG_TMS__SAI2_MCLK		0x17088
			>;
		};

		pinctrl_sd1_vmmc: sd1vmmcgrp {
			fsl,pins = <
				/* EN_SD_POWER, special setting*/
				MX6UL_PAD_SNVS_TAMPER9__GPIO5_IO09	0x17059
			>;
		};

		pinctrl_uart1: uart1grp {
			fsl,pins = <
				MX6UL_PAD_UART1_TX_DATA__UART1_DCE_TX	0x1b0b1
				MX6UL_PAD_UART1_RX_DATA__UART1_DCE_RX	0x1b0b1
			>;
		};

		pinctrl_uart2: uart2grp {
			fsl,pins = <
				MX6UL_PAD_UART2_TX_DATA__UART2_DCE_TX	0x1b0b1
				MX6UL_PAD_UART2_RX_DATA__UART2_DCE_RX	0x1b0b1
			>;
		};

		pinctrl_uart3: uart3grp {
			fsl,pins = <
				MX6UL_PAD_UART3_RX_DATA__UART3_DCE_RX	0x1b0b1
				MX6UL_PAD_UART3_TX_DATA__UART3_DCE_TX	0x1b0b1
				MX6UL_PAD_UART3_CTS_B__UART3_DCE_CTS	0x1b0b1
				MX6UL_PAD_UART3_RTS_B__UART3_DCE_RTS	0x1b0b1
			>;
		};

		pinctrl_uart4: uart4grp {
			fsl,pins = <
				MX6UL_PAD_UART4_RX_DATA__UART4_DCE_RX	0x1b0b1
				MX6UL_PAD_UART4_TX_DATA__UART4_DCE_TX	0x1b0b1
			>;
		};

		pinctrl_uart5: uart5grp {
			fsl,pins = <
				MX6UL_PAD_UART5_RX_DATA__UART5_DCE_RX	0x1b0b1
				MX6UL_PAD_UART5_TX_DATA__UART5_DCE_TX	0x1b0b1
			>;
		};

		pinctrl_uart7: uart7grp {
			fsl,pins = <
				MX6UL_PAD_LCD_DATA17__UART7_DCE_RX	0x1b0b1
				MX6UL_PAD_LCD_DATA16__UART7_DCE_TX	0x1b0b1
			>;
		};

		pinctrl_usb_otg1_id: usbotg1idgrp {
			fsl,pins = <
				MX6UL_PAD_GPIO1_IO00__ANATOP_OTG1_ID	0x17059
			>;
		};

		/* OTG1 PWR: XXX: should this hook up to not GPIO? */
		pinctrl_usb_otg1: usbotg1grp {
			fsl,pins = <
				MX6UL_PAD_GPIO1_IO04__GPIO1_IO04	0x10b0
			>;
		};

		pinctrl_usdhc1: usdhc1grp {
			fsl,pins = <
				MX6UL_PAD_SD1_CMD__USDHC1_CMD		0x17059
				MX6UL_PAD_SD1_CLK__USDHC1_CLK		0x10071
				MX6UL_PAD_SD1_DATA0__USDHC1_DATA0	0x17059
				MX6UL_PAD_SD1_DATA1__USDHC1_DATA1	0x17059
				MX6UL_PAD_SD1_DATA2__USDHC1_DATA2	0x17059
				MX6UL_PAD_SD1_DATA3__USDHC1_DATA3	0x17059
			>;
		};

		pinctrl_usdhc1_100mhz: usdhc1grp100mhz {
			fsl,pins = <
				MX6UL_PAD_SD1_CMD__USDHC1_CMD		0x170b9
				MX6UL_PAD_SD1_CLK__USDHC1_CLK		0x100b9
				MX6UL_PAD_SD1_DATA0__USDHC1_DATA0	0x170b9
				MX6UL_PAD_SD1_DATA1__USDHC1_DATA1	0x170b9
				MX6UL_PAD_SD1_DATA2__USDHC1_DATA2	0x170b9
				MX6UL_PAD_SD1_DATA3__USDHC1_DATA3	0x170b9
			>;
		};

		pinctrl_usdhc1_200mhz: usdhc1grp200mhz {
			fsl,pins = <
				MX6UL_PAD_SD1_CMD__USDHC1_CMD		0x170f9
				MX6UL_PAD_SD1_CLK__USDHC1_CLK		0x100f9
				MX6UL_PAD_SD1_DATA0__USDHC1_DATA0	0x170f9
				MX6UL_PAD_SD1_DATA1__USDHC1_DATA1	0x170f9
				MX6UL_PAD_SD1_DATA2__USDHC1_DATA2	0x170f9
				MX6UL_PAD_SD1_DATA3__USDHC1_DATA3	0x170f9
			>;
		};

		pinctrl_usdhc2: usdhc2grp {
			fsl,pins = <
				MX6UL_PAD_NAND_RE_B__USDHC2_CLK		0x10069
				MX6UL_PAD_NAND_WE_B__USDHC2_CMD		0x17059
				MX6UL_PAD_NAND_DATA00__USDHC2_DATA0	0x17059
				MX6UL_PAD_NAND_DATA01__USDHC2_DATA1	0x17059
				MX6UL_PAD_NAND_DATA02__USDHC2_DATA2	0x17059
				MX6UL_PAD_NAND_DATA03__USDHC2_DATA3	0x17059
			>;
		};

		pinctrl_wdog: wdoggrp {
			fsl,pins = <
				MX6UL_PAD_LCD_RESET__WDOG1_WDOG_ANY	0x30b0
			>;
		};
	};
};

&pwm1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm1>;
	status = "okay";
};

&pwm2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm2>;
	status = "disabled";
};

&pwm5 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm5>;
	status = "okay";
};

&pwm6 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm6>;
	status = "okay";
};

&snvs_rtc {
	status = "okay";
};

&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart1>;
	status = "okay";
};

&uart2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart2>;
	status = "okay";
};

&uart3 {
	/* BT, requires CTS/RTS */
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart3>;
	status = "okay";
	uart-has-rtscts;
};

&uart4 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart4>;
	status = "okay";
};

&uart5 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart5>;
	status = "okay";
};

&uart7 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart7>;
	status = "okay";
};

&usbotg1 {
	vbus-supply = <&reg_usb_otg1_vbus>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usb_otg1_id>;
	srp-disable;
	hnp-disable;
	adp-disable;
	status = "okay";
};

&usbotg2 {
	dr_mode = "host";
	disable-over-current;
	status = "okay";
};

&usdhc1 {
	/* keep-power-in-suspend has been found to not have any significant
	 * reduction in power
	 */
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc1>;
	pinctrl-1 = <&pinctrl_usdhc1_100mhz>;
	pinctrl-2 = <&pinctrl_usdhc1_200mhz>;
	max-frequency = <208000000>;
	keep-power-in-suspend;
	enable-sdio-wakeup;
	disable-wp;
	cap-sd-highspeed;
	sd-uhs-sdr12;
	sd-uhs-sdr25;
	sd-uhs-sdr50;
	sd-uhs-sdr104;
	sd-uhs-ddr50;
	broken-cd = <1>;
	bus-width = <4>;
	vmmc-supply = <&reg_sd1_vmmc>;
	status = "okay";
};

&usdhc2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usdhc2>;
	no-1-8-v;
	disable-wp;
	broken-cd = <1>;
	enable-sdio-wakeup;
	bus-width = <4>;
	status = "okay";
};
