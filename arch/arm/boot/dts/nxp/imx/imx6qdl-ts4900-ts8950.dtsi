// SPDX-License-Identifier: GPL-2.0 OR X11
/*
 * Copyright 2018-2022 Technologic Systems, Inc. dba embeddedTS
 */

#include <dt-bindings/interrupt-controller/irq.h>

/ {
	chosen {
		stdout-path = &uart1;
	};

	aliases {
		ethernet0 = &fec;
		ethernet1 = &ethernet;
	};

	backlight_lvds: backlight-lvds {
		compatible = "pwm-backlight";
		pwms = <&pwm3 0 500000 0>;
		/*
		 * Backlight doesn't register anything until about half of max
		 * brightness. So start the first real step at something that
		 * makes the display visible. From there, make each step
		 * meaningful along the scale.
		 */
		brightness-levels = < 0 48 49 50 51 52 53 54 55 56
				     57 58 59 60 61 62 63 64 65 66
				     67 68 69 70 71 72 73 74 75 76
				     77 78 78 80 81 82 83 84 85 86
				     87 88 89 90 91 92 93 94 95 96
				     97 98 99 100>;
		default-brightness-level = <53>;

		power-supply = <&reg_5v>;
	};

	lcd_lvds0: disp0 {
		compatible = "panel-lvds";
		backlight = <&backlight_lvds>;
		power-supply = <&reg_lcd_3v3>;
		width-mm = <21>;
		height-mm = <16>;
		data-mapping = "vesa-24";

		panel-timing {
			clock-frequency = <40000000>;
			hactive = <800>;
			vactive = <600>;
			hback-porch = <46>;
			hfront-porch = <210>;
			vback-porch = <23>;
			vfront-porch = <12>;
			hsync-len = <20>;
			vsync-len = <10>;
			de-active = <1>;
			hsync-active = <1>;
			vsync-active = <1>;
			pixelclk-active = <0>;
		};

		port {
			panel_in: endpoint {
				remote-endpoint = <&lvds0_out>;
			};
		};
	};

	pps {
		/* Part of Telit GPS radio */
		compatible = "pps-gpio";
		gpios = <&gpio5 11 GPIO_ACTIVE_HIGH>;
	};

	reg_5v: regulator-5v {
		compatible = "regulator-fixed";
		regulator-name = "5V";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		regulator-always-on;
	};

	reg_can_3v3: regulator-can-en {
		compatible = "regulator-fixed";
		regulator-name = "CAN_EN";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		gpio = <&gpio5 16 GPIO_ACTIVE_HIGH>;
	};

	reg_lcd_3v3: regulator-lcd {
		/* pinctrl_lcd_gpio hog already sets up the GPIO for this reg */
		compatible = "regulator-fixed";
		regulator-name = "LCD_3V3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		gpio = <&gpio2 19 GPIO_ACTIVE_HIGH>;
		enable-active-high;
		regulator-boot-on;
		startup-delay-us = <60000>;
	};

	sound {
		compatible = "fsl,imx-audio-sgtl5000";
		audio-codec = <&sgtl5000>;
		audio-routing =
			"MIC_IN", "Mic Jack",
			"Mic Jack", "Mic Bias",
			"Headphone Jack", "HP_OUT";
		model = "On-board Codec";
		/* These describe the connection of SSI source (int) to audio out (ext) */
		mux-int-port = <1>;
		mux-ext-port = <3>;
		ssi-controller = <&ssi1>;
	};
};

&audmux {
	status = "okay";
};

&can1 {
	xceiver-supply = <&reg_can_3v3>;
};

&can2 {
	xceiver-supply = <&reg_can_3v3>;
};

&ecspi2 {
	num-cs = <3>;
	cs-gpios = <
		&gpio6 2 GPIO_ACTIVE_LOW
		&gpio5 29 GPIO_ACTIVE_LOW
		&gpio4 27 GPIO_ACTIVE_LOW
	>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi2>;
	status = "okay";

	tsc2046: touchscreen@1 {
		reg = <1>;
		compatible = "ti,tsc2046";
		interrupt-parent = <&gpio4>;
		interrupts = <25 IRQ_TYPE_EDGE_FALLING>;
		spi-max-frequency = <2000000>;
		pendown-gpio = <&gpio4 25 GPIO_ACTIVE_LOW>;
		vcc-supply = <&reg_3v3>;
		ti,swap-xy;
		ti,keep-vref-on;
		ti,vref-mv = <3300>;
		ti,settle-delay-usec = /bits/ 16 <500>;
		ti,x-plate-ohms = /bits/ 16 <715>;
		ti,pressure-max = /bits/ 16 <65535>;
		ti,debounce-rep = /bits/ 16 <1>;
		ti,debounce-tol = /bits/ 16 <30>;
		ti,debounce-max = /bits/ 16 <255>;
		ti,pendown-gpio-debounce = <5000>;
		wakeup-source;
	};

	spidev: spi@2 {
		compatible = "technologic,spi-header";
		reg = <2>;
		spi-max-frequency = <18000000>;
	};
};

/*
 * This platform uses a different pin for USB 5 V control than other
 * combinations and what the TS-4900 dts expects. Because of that,
 * need to adjust pin names for sanity.
 */

&gpio2 {
	gpio-line-names = "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "IRQ7", "", "XBEE_CTS", "", "", "OFF_BD_RESET",
		"", "", "", "", "", "", "", "", "", "";
};

&gpio4 {
	gpio-line-names = "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "PUSH_SW_1#", "", "PCIE_SEL#", "", "ETH_PHY_RESET",
		"", "EN_USB_5V", "", "EN_GPS_3.3V#", "TOUCH_WAKE#", "", "",
		"PWR_FAIL#", "", "DIO_7", "DIO_8";
};

&gpio5 {
	gpio-line-names = "", "", "", "", "IRQ5", "DIO_9", "DIO_10", "DIO_11",
		"DIO_12", "IRQ9", "PUSH_SW_2#", "GPS_PPS", "", "USER_JMP_1#",
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "";

	en-line-amp-hog {
		gpio-hog;
		gpios = <15 GPIO_ACTIVE_HIGH>;
		line-name = "LINE_AMP_EN";
		output-high;
	};
};

&gpio6 {
	gpio-line-names = "", "", "", "", "", "", "IRQ6", "", "", "", "", "",
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "";
};

&i2c2 {
	status = "okay";
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c2>;

	sgtl5000: audio-codec@a {
		compatible = "fsl,sgtl5000";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_sgtl5000>;
		reg = <0x0a>;
		clocks = <&clks IMX6QDL_CLK_CKO>;
		VDDA-supply = <&reg_3v3>;
		VDDIO-supply = <&reg_3v3>;
	};

	mma8451: accelerometer@1c {
		compatible = "fsl,mma8451";
		reg = <0x1c>;
		vdd-supply = <&reg_3v3>;
		vddio-supply = <&reg_3v3>;
		interrupt-parent = <&gpio5>;
		interrupts = <17 IRQ_TYPE_LEVEL_LOW>;
		interrupt-names = "INT1";
		/* INT2 connected to spare pins, otherwise unused */
	};
};

&iomuxc {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_hog &pinctrl_lcd_gpio>;

	pinctrl_ecspi2_touch: ecspi2 {
		fsl,pins = <
			MX6QDL_PAD_CSI0_DAT8__ECSPI2_SCLK	0x100b1
			MX6QDL_PAD_CSI0_DAT9__ECSPI2_MOSI	0x100b1
			MX6QDL_PAD_CSI0_DAT10__ECSPI2_MISO	0x100b1
			MX6QDL_PAD_CSI0_DAT11__GPIO5_IO29	0x100b1 // Offboard CS0#
			MX6QDL_PAD_CSI0_DAT16__GPIO6_IO02	0x100b1 // FPGA CS1#
			MX6QDL_PAD_CSI0_VSYNC__GPIO5_IO21	0x1b088 // FPGA_RESET#
			MX6QDL_PAD_CSI0_DATA_EN__GPIO5_IO20	0x1b088 // FPGA_DONE
			MX6QDL_PAD_GPIO_3__XTALOSC_REF_CLK_24M	0x10    // FPGA 24MHZ
			MX6QDL_PAD_GPIO_4__GPIO1_IO04		0x1b088 // FPGA_IRQ
			MX6QDL_PAD_DISP0_DAT4__GPIO4_IO25	0x1b088 // TOUCH_WAKE#
		>;
	};

	pinctrl_pwm3: pwm3grp {
		fsl,pins = <
			MX6QDL_PAD_SD4_DAT1__PWM3_OUT		0x1b088
		>;
	};

	pinctrl_lcd3v3: lcdreggrp {
		fsl,pins = <
			MX6QDL_PAD_EIM_A19__GPIO2_IO19		0x1b088 // EN_LCD_3.3V
		>;
	};

	pinctrl_sgtl5000: sgtl5000grp {
		fsl,pins = <
			MX6QDL_PAD_CSI0_DAT7__AUD3_RXD		0x130b0
			MX6QDL_PAD_CSI0_DAT4__AUD3_TXC		0x130b0
			MX6QDL_PAD_CSI0_DAT5__AUD3_TXD		0x110b0
			MX6QDL_PAD_CSI0_DAT6__AUD3_TXFS		0x130b0
			MX6QDL_PAD_GPIO_0__CCM_CLKO1		0x130b0 // Audio CLK
		>;
	};

	pinctrl_eim: eim {
		fsl,pins = <
			MX6QDL_PAD_EIM_DA0__EIM_AD00		0x1b088 // MUX_AD_00
			MX6QDL_PAD_EIM_DA1__EIM_AD01		0x1b088 // MUX_AD_01
			MX6QDL_PAD_EIM_DA2__EIM_AD02		0x1b088 // MUX_AD_02
			MX6QDL_PAD_EIM_DA3__EIM_AD03		0x1b088 // MUX_AD_03
			MX6QDL_PAD_EIM_DA4__EIM_AD04		0x1b088 // MUX_AD_04
			MX6QDL_PAD_EIM_DA5__EIM_AD05		0x1b088 // MUX_AD_05
			MX6QDL_PAD_EIM_DA6__EIM_AD06		0x1b088 // MUX_AD_06
			MX6QDL_PAD_EIM_DA7__EIM_AD07		0x1b088 // MUX_AD_07
			MX6QDL_PAD_EIM_DA8__EIM_AD08		0x1b088 // MUX_AD_08
			MX6QDL_PAD_EIM_DA9__EIM_AD09		0x1b088 // MUX_AD_09
			MX6QDL_PAD_EIM_DA10__EIM_AD10		0x1b088 // MUX_AD_10
			MX6QDL_PAD_EIM_DA11__EIM_AD11		0x1b088 // MUX_AD_11
			MX6QDL_PAD_EIM_DA12__EIM_AD12		0x1b088 // MUX_AD_12
			MX6QDL_PAD_EIM_DA13__EIM_AD13		0x1b088 // MUX_AD_13
			MX6QDL_PAD_EIM_DA14__EIM_AD14		0x1b088 // MUX_AD_14
			MX6QDL_PAD_EIM_DA15__EIM_AD15		0x1b088 // MUX_AD_15
			MX6QDL_PAD_EIM_A16__EIM_ADDR16		0x1b088 // MX6_A16
			MX6QDL_PAD_EIM_LBA__EIM_LBA_B		0x1b088 // BUS_ALE#
			MX6QDL_PAD_EIM_RW__EIM_RW		0x1b088 // BUS_DIR
			MX6QDL_PAD_EIM_CS0__EIM_CS0_B		0x1b088 // BUS_CS#
			MX6QDL_PAD_EIM_WAIT__EIM_DTACK_B	0x1b088 // BUS_WAIT#
			MX6QDL_PAD_EIM_D31__GPIO3_IO31		0x1b088 // D31/GPIO
			MX6QDL_PAD_EIM_EB1__EIM_EB1_B		0x1b088 // BUS_BHE#
		>;
	};
};

&ldb {
	status = "okay";

	lvds-channel@0 {
		fsl,data-mapping = "spwg";
		fsl,data-width = <18>;

		status = "okay";

		port@4 {
			reg = <4>;

			lvds0_out: endpoint {
				remote-endpoint = <&panel_in>;
			};
		};
	};
};

&pwm3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm3>;
	status = "okay";
};

&ssi1 {
	fsl,mode = "i2s-slave";
	status = "okay";
};

&usbh1 {
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";

	usb1@1 {
		compatible = "usb424,9514";
		reg = <1>;
		#address-cells = <1>;
		#size-cells = <0>;

		ethernet: usbether@1 {
			compatible = "usb424,ec00";
			reg = <1>;
		};
	};
};
